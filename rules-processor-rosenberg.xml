<processor-rules>
	<!--types - splitregex,  matchandtranslate-->
	<globalrules>
		<rule type="splitRegex">
			<name>detailsplit</name> <!--it is very important that each rule have a unique name-->
			<!--<nextrule>followtest</nextrule> [>the name of the next rule to apply if this one is triggered<]-->
			<input>Detail Raw</input> <!--which node to get the data from--> 
			<multisplit> <!--multisplit dynamically creates nodes based on multiple regex matches. eg (A), (B) etc-->
				<regex>(\(([A-Z])\).+?(@nl|\n|$))</regex>
				<group>1</group>
				<node name="split{}"></node>
			</multisplit>
		</rule>

		<rule type="splitRegex">
			<name>deliveryDateSplit</name>
			<input>Delivery Date</input>
			<split>
				<regex>(.*)</regex>
				<group number='1'>
					<node name='deliveryDateRaw'></node>
				</group>
			</split>
			<split>
				<regex>([0-9]+\/[0-9]+\/[0-9]+)</regex>
				<group number='1'>
					<node name='Delivery Date'></node>
				</group>
			</split>
		</rule>

		<rule type="splitRegex">
			<name>NoteSplit</name>
			<input>Note Raw</input>
			<split>
				<regex>.*holding\s*brackets\s*\((\d+)"\s*x\s*(\d+)"\).*</regex>
				<group number='1'>
					<node name='bracket1st'></node>
				</group>
				<group number='2'>
					<node name='bracket2nd'></node>
				</group>
			</split>
			<split>
				<regex>(take|Take).*from.*(L[0-9]{5})</regex>
				<group number='2'>
					<node name='Take From'></node>
				</group>
			</split>
			<split>
				<regex>(?i)Same as previous(.*?)([L0-9].+)\s*?dated\s*?([0-9\/]+)</regex>
				<group number='2'>
					<node name='samePrevOrderNum'></node>
				</group>
				<group number='3'>
					<node name='samePrevOrderDate'></node>
				</group>
			</split>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateGreaseNipple</name>
			<input>Note Raw</input>
			<translate>
				<match input='Note Raw'>(?i).*w\/o grease nipples.*</match>
				<node name='greaseNippleRemark'>{greaseNippleRemark}不要加打油 </node>
			</translate>
			<translate>
				<match input='Note Raw'>(?i).*the fan dimensions according to the sample sent.*</match>
				<node name='greaseNippleRemark'>{greaseNippleRemark}照样本做 </node>
			</translate>
			<translate>
				<match input='Note Raw'>(?i).*Flange rolled casing without rebeading \(flat flange\).*</match>
				<!--<match input='Note Raw'>(?i).*Flange rolled casing.*</match>-->
				<node name='greaseNippleRemark'>{greaseNippleRemark}Flange卷平  </node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>sameAsPrev</name>
			<input>Note Raw</input>
			<condition type='nodeExists'>
				<node name='samePrevOrderNum'></node>
			</condition>
			<translate>
				<match input='greaseNippleRemark'>.*</match>
				<node name='greaseNippleRemark'>{greaseNippleRemark} 照旧{samePrevOrderNum} {samePrevOrderDate}</node>
				<node name='F/B (scraped)'>查 F/B 照旧</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>holdingBrackets</name>
			<input>bracket1st</input>
			<input>bracket2nd</input>
			<translate>
				<match input='bracket1st'>[0-9]+</match>
				<match input='bracket2nd'>[0-9]+</match>
				<node name='F/B (scraped)'>F/B {bracket1st}in x {bracket2nd}in</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>noFBDefault</name>
			<input>F/B (scraped)</input>
			<condition type='nodeDoesNotExist'>
				<node name='F/B (scraped)'></node>
			</condition>
			<translate>
				<match input='F/B (scraped)'>.*</match>
				<node name='F/B (scraped)'>不用F/B</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>translateUrgency</name>
			<input>Reason</input>
			<input>Galvanised</input>
			<translate>
				<match input='Reason'>.+</match>
				<node name='Reason'>Ms Tan PO</node>
			</translate>
			<translate>
				<match input='Galvanised'>.+</match>
				<node name='Reason'>Ms Tan PO</node>
			</translate>
		</rule>

		<rule type="coerceDate">
			<name>coerceIssueDate</name>
			<input>PO Date</input>
		</rule>
		<rule type="coerceDate">
			<name>coerceDeliveryDate</name>
			<input>Delivery Date</input>
		</rule>
		<rule type="coerceDate">
			<name>coerceGalvanisedDate</name>
			<input>Galvanised</input>
		</rule>

		<rule type="copyToItems">
			<name>copyPONum</name>
			<input>PO Number</input>
			<newnodename>PO Number</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyNettAmount</name>
			<input>Nett Amount</input>
			<newnodename>Nett Amount</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyImpellerSet</name>
			<input>impellerset</input>
			<newnodename>impellerset</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyFilename</name>
			<input>Filename</input>
			<newnodename>Filename</newnodename>
		</rule>

		<rule type="copyToItems">
			<name>copyPODate</name>
			<input>PO Date</input>
			<newnodename>PO Date</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyPODate</name>
			<input>PO Date</input>
			<newnodename>PO Date</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyFB</name>
			<input>F/B (scraped)</input>
			<newnodename>F/B (scraped)</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyUrgency</name>
			<input>Reason</input>
			<newnodename>Reason</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copySite</name>
			<input>Project Site</input>
			<newnodename>Project Site</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyGreaseNipple</name>
			<input>greaseNippleRemark</input>
			<newnodename>greaseNippleRemark</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyNoteRaw</name>
			<input>Note Raw</input>
			<newnodename>Note Raw</newnodename>
		</rule>

		<rule type="copyToItems">
			<name>copyDetailRaw</name>
			<input>Detail Raw</input>
			<newnodename>Detail Raw</newnodename>
		</rule>

		<rule type="copyToItems">
			<name>copyDeliveryDate</name>
			<input>Delivery Date</input>
			<newnodename>PO Delivery Date</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyDeliveryDateRaw</name>
			<input>deliveryDateRaw</input>
			<newnodename>Delivery Date Raw</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyBracket1</name>
			<input>bracket1st</input>
			<newnodename>bracket1st</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyBracket2</name>
			<input>bracket2nd</input>
			<newnodename>bracket2nd</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyTakeFrom</name>
			<input>Take From</input>
			<newnodename>Take From</newnodename>
		</rule>
		<rule type="copyToItems">
			<name>copyCheckString</name>
			<input>checkString</input>
			<newnodename>checkString</newnodename>
		</rule>

		<rule type="copyByRegex">
			<name>copyDetailSplits</name>
			<regex>split([A-Z])</regex><!-- look for this node in the network-->
			<keyfield>ITEM</keyfield><!-- copy to anything that contains group(1) from the above regex in this field-->
			<newnodename>detailSplit</newnodename>
		</rule>
	</globalrules>


	<itemrules>

		<rule type="alias">
			<name>renameFields</name>
			<alias name="Model/Description">MODEL</alias>
			<alias name="Model">MODEL</alias>
			<alias name="Date">DATE</alias>
			<alias name="Motor">motorSize</alias>
			<alias name="MOTOR">motorSize</alias>
			<alias name="Qty/Uts">QTY</alias>
			<alias name="Item">ITEM</alias>
			<alias name="T/Box">T/BOX</alias>
			<alias name="T/Box Position">T/BOX</alias>
			<alias name="T/BOX POSITION">T/BOX</alias>
			<alias name="CLASS">t_motor_class</alias>
			<alias name="S$U/P">Price per Unit</alias>
			<alias name="Frame">Motor Frame (Scraped)</alias>
			<alias name="s/n">ITEM</alias>
		</rule>

		<rule type="copyNode">
			<name>copyDetailRawCond</name>
			<condition type='nodeDoesNotExist'>
				<node name='detailSplit'></node>
			</condition>
			<input>Detail Raw</input>
			<newnodename>detailSplit</newnodename>
		</rule>

		<rule type="splitRegex">
			<name>modelstringMainSplit</name>
			<input>MODEL</input>
			<split>
				<regex>^\s*(BIF|SWSI|HRES|AND|RV|DQ)\s*(-Ex|Ex|-GVD|-CR|-T|-S)?</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringExtra"></node>
				</group>
			</split>
			<split>
				<regex>^(?i)(Mounting Feet|Matching Flanges)\s*([0-9]+)mm( \(([0-9.]+)mm thk\))?</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="modelstringSize"></node>
				</group>
				<group number='4'>
					<node name="modelstringSpacerThickness"></node>
				</group>
			</split>
			<split>
				<regex>(?i)(Mounting Plate).*(DKHR|EKHR)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="mountingPlateType"></node>
				</group>
			</split>
			<split>
				<regex>(?i)([0-9]+)\s*holes\s*x\s*([0-9]+)(mm)?</regex>
				<group number='1'>
					<node name='casingHoleNumber'></node>
				</group>
				<group number='2'>					
					<node name='casingHoleWidth'></node>
				</group>
			</split>
			<split>
				<regex>(Spacer) ([0-9]+) x ([0-9]+)mmL \(([0-9.]+)mm thk\)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>
					<node name="modelstringCasingLength"></node>
				</group>
				<group number='4'>
					<node name="modelstringSpacerThickness"></node>
				</group>
			</split>
			<split>
				<regex>^(?i)(Ex-Proof Accessories|Aluminium Anti-Spark Thread)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
			</split>
			<split>
				<regex>^(RS|RSM)[ -]([0-9]+)(-([\d.]+)[dDL])(.*)?</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringRSSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringSilencerSize"></node>
				</group>
				<group number='4'>					
					<node name="modelstringSilencerNumOnly"></node>
				</group>
				<group number='5'>					
					<node name="modelstringRSExtra"></node>
				</group>
			</split>
			<split>
				<regex>^(Guide Vane) (\d+) \(([0-9.])+mm.*\)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<split>
				<regex>^(Guide Vane) (\d+).*?(\d+ Blades), ?(\d+)mmL</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringImpeller"></node>
				</group>
				<group number='4'>					
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<split>
				<regex>^(DKHRC|DKHR|EKHR) ([0-9]+)(-.+?) ?(\(LG 0\))?$</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringSilencerSize"></node>
				</group>
			</split>
			<split>
				<regex>^(?i)(Grease Nipples?)$</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
			</split>
			<split>
				<regex>([0-9]+)\/([0-9A-Z-]+\/.+)</regex> <!--xxxx/x-x/fooo format-->
				<group number='1'>
					<node name="modelstringSize"></node>
				</group>
				<group number='2'>
					<node name="modelstringImpeller"></node>
				</group>
			</split>
			<split>
				<regex>(MS Inlet Cone) ([0-9]+)</regex> 
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="modelstringSize"></node>
				</group>
			</split>
			<split>
				<regex>(?i)(Epoxy Coating|Epoxy Coated|Epoxy Painting)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
			</split>
			<split>
				<regex>[0-9]+\/[0-9-]+\/.+\(([0-9]+)mmL\)</regex>
				<group number='1'>
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<split>
				<regex>(?i)([0-9]+mmOD)</regex>
				<group number='1'>
					<node name="modelstringOD"></node>
				</group>
			</split>
			<split>
				<regex>(?i)([0-9]+mmPCD)</regex>
				<group number='1'>
					<node name="modelstringPCD"></node>
				</group>
			</split>
		</rule>
		<rule type="splitRegex">
			<name>splitMotorSize</name>
			<input>motorSize</input>
			<split>
				<regex>([0-9.\/]+)(kw)?</regex>
				<group number='1'>
					<node name='motorSize'></node>
				</group>
			</split>
		</rule>

		<rule type="splitRegex">
			<name>detailSplitRule</name>
			<input>detailSplit</input>
			<split>
				<regex>(Class|CL) ([A-Z])</regex>
				<group number='2'>
					<node name='t_motor_class'></node>
				</group>
			</split>
			<split>
				<regex>(Teco|Att|AEG|UMEB|RAEL|WEG).*Motor</regex>
				<group number='1'>
					<node name='motorBrand'></node>
				</group>
			</split>
			<split>
				<regex>.*(EX).*</regex>
				<group number='1'>
					<node name='detailSplitEX'></node>
				</group>
			</split>
			<split>
				<regex>(2|4|2\/4|4\/6|4\/8) Pole</regex>
				<group number='1'>
					<node name='t_motor_poles'></node>
				</group>
			</split>
			<split>
				<regex>([0-9]+)[vV]\/</regex>
				<group number='1'>
					<node name='t_motor_voltage'></node>
				</group>
			</split>
			<split>
				<regex>(V|B) Series</regex>
				<group number='1'>
					<node name='t_motor_class_series'></node>
				</group>
			</split>
			<split>
				<regex>#\s*([0-9]+[A-Z]?)</regex>
				<group number='1'>
					<node name='Motor Frame (Scraped)'></node>
				</group>
			</split>
		</rule>
		<rule type="matchAndTranslate">
			<name>combineMountingPlateType</name>
			<input>mountingPlateType</input>
			<input>modelstringItem</input>
			<translate>
				<match input='modelstringItem'>(?i)mounting plate</match>
				<match input='mountingPlateType'>.+</match>
				<node name='modelstringItem'>{mountingPlateType} Mounting Plate</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>translateMotorBrandEX</name>
			<input>motorBrand</input>
			<input>detailSplitEX</input>
			<translate>
				<match input='motorBrand'>RAEL</match>
				<match input='detailSplitEX'>EX</match>
				<node name='motorBrand'>RAEL-EX</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>translatePoles</name>
			<input>t_motor_poles</input>
			<translate>
				<match input='t_motor_poles'>2</match>
				<node name='motorSpeed'>2880</node>
			</translate>
			<translate>
				<match input='t_motor_poles'>4</match>
				<node name='motorSpeed'>1440</node>
			</translate>
			<translate>
				<match input='t_motor_poles'>6</match>
				<node name='motorSpeed'>1148</node>
			</translate>
			<translate>
				<match input='t_motor_poles'>2\/4</match>
				<node name='motorSpeed'>2880/1440</node>
			</translate>
			<translate>
				<match input='t_motor_poles'>4\/6</match>
				<node name='motorSpeed'>1440/1148</node>
			</translate>
			<translate>
				<match input='t_motor_poles'>4\/8</match>
				<node name='motorSpeed'>1440/900</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>translateCasingHole</name>
			<input>casingHoleNumber</input>
			<input>casingHoleWidth</input>
			<translate>
				<match input='casingHoleNumber'>.+</match>
				<match input='casingHoleWidth'>.+</match>
				<node name='Casing Hole (Special)'>{casingHoleNumber} x {casingHoleWidth}mmØ</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>translateSpacerThickness</name>
			<input>modelstringSpacerThickness</input>
			<translate>
				<match input='modelstringSpacerThickness'>3</match>
				<node name='modelstringSpacerThickness'>2.5</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateMotorClass</name>
			<input>t_motor_class</input>
			<input>t_motor_class_series</input>
			<translate>
				<match input='t_motor_class'>[A-Z]</match>
				<node name='motorClass'>Class {t_motor_class}</node>
			</translate>
			<translate>
				<match input='t_motor_class'>[A-Z]</match>
				<match input='t_motor_class_series'>[A-Z]</match>
				<node name='motorClass'>{motorClass} ({t_motor_class_series})</node>
			</translate>
		</rule>


		<rule type="matchAndTranslate">
			<name>translatemodelstringItem</name>
			<!--<nextrule>foo</nextrule>-->
			<input>modelstringItem</input>
			<input>modelstringExtra</input>
			<input>impellerset</input>
			<input>MODEL</input>
			<translate>
				<match input='modelstringItem'>AND</match>
				<node name="modelstringItem">Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Ax</match>
				<match input='modelstringExtra'>(-Ex|Ex)</match>
				<node name="modelstringItem">Ax-Ex</node>
			</translate>
			<translate>
				<match input='modelstringItem'>(?i)Grease Nipples?</match>
				<node name="modelstringItem">Grease Nipple</node>
			</translate>
			<!--<translate>-->
				<!--<match input='modelstringItem'>Ax</match>-->
				<!--<match input='modelstringExtra'>-S</match>-->
				<!--<node name="modelstringItem">Ax-Ex</node>-->
			<!--</translate>-->
			<translate>
				<match input='modelstringItem'>BIF</match>
				<node name="modelstringItem">Bif</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Bif</match>
				<match input='modelstringExtra'>-T</match>
				<node name="modelstringItem">Bif T/p</node>
			</translate>
			<translate>
				<match input='modelstringItem'>(RS|RSM)</match>
				<node name="motorSize"></node>
				<node name="motorClass"></node>
				<node name="motorBrand"></node>
				<node name="motorSpeed"></node>
			</translate>
			<!--<translate>-->
				<!--<match input='modelstringItem'>(?i)Spacer.*</match>-->
				<!--<node name="motorSize"></node>-->
				<!--<node name="motorClass"></node>-->
				<!--<node name="motorBrand"></node>-->
				<!--<node name="motorSpeed"></node>-->
			<!--</translate>-->
			<translate>
				<match input='modelstringItem'>RV</match>
				<node name="modelstringItem">RV - Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>DQ</match>
				<node name="modelstringItem">DQ - Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Matching Flanges</match>
				<node name="modelstringItem">MFlanges</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Mounting Feet</match>
				<node name="modelstringItem">MFeet</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Epoxy Coating</match>
				<node name="modelstringItem">Epoxy Painting</node>
			</translate>
			<translate>
				<match input='impellerset'>(?i).*impeller set</match>
				<match input='modelstringItem' matchtype='nomatch'>Epoxy Painting</match>
				<node name="modelstringItem">Impeller</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Guide Vane</match>
				<node name="modelstringItem">Guide Vane</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Aluminium Anti-Spark Thread</match>
				<node name="modelstringItem">Track - Aluminium</node>
			</translate>
			<translate>
				<match input='modelstringItem'>MS Inlet Cone.*</match>
				<node name="modelstringItem">Inlet Cone MS</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>mountingfeetspecialcase</name>
			<input>modelstringItem</input>
			<input>Price per Unit</input>
			<input>modelstringItem</input>
			<translate>
				<match input='modelstringItem'>MFeet</match>
				<match input='Price per Unit'>-</match>
				<node name='Price per Unit'>0</node>
			</translate>
		</rule>


		<rule type="matchAndTranslate">
			<name>translateSilencerSize</name>
			<input>modelstringSilencerSize</input>
			<input>modelstringSilencerNumOnly</input>
			<input>modelstringItem</input>
			<translate>
				<match input='modelstringSilencerSize'>-4W c/w Aluminium Capacitor</match>
				<node name='modelstringSilencerSize'>-4 c/w AL</node>
			</translate>
			<translate>
				<match input='modelstringSilencerSize'>-4 EX</match>
				<node name='modelstringSilencerSize'>-4-EX</node>
			</translate>
			<translate>
				<match input='modelstringSilencerSize'>(-[0-9]+)L</match>
				<match input='modelstringItem'>(RS|RSM)</match>
				<node name='modelstringSilencerSize'>-{modelstringSilencerNumOnly}mmL Collar</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateRSSilencer</name>
			<input>modelstringRSExtra</input>
			<input>modelstringSilencerSize</input>
			<translate>
				<match input='modelstringRSExtra'>.*c\/w [Mm]elinex</match> 
				<node name='modelstringSilencerSize'>{modelstringSilencerSize} c/w Melinex</node>
			</translate>
			<translate>
				<match input='modelstringRSExtra'>(?i).*collar type.*</match> 
				<node name='modelstringSilencerSize'>{modelstringSilencerSize} Collar</node>
				<node name='modelstringCollarType'>collar</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>translateMotorVoltage</name>
			<input>t_motor_voltage</input>
			<translate>
				<match input='t_motor_voltage'>[0-9]+</match>
				<node name='motorVoltage'>{t_motor_voltage}V</node>
			</translate>
		</rule>
		<rule type="matchAndTranslate">
			<name>motorSizeFloat</name>
			<input>motorSize</input>
			<translate>
				<match input='motorSize'>^4$</match>
				<node name='motorSize'>4.0</node>
			</translate>
			<translate>
				<match input='motorSize'>^3$</match>
				<node name='motorSize'>3.0</node>
			</translate>
		</rule>
		<rule type="copyNode">
			<name>copyRSSizetoSize</name>
			<condition type='nodeExists'>
				<node name='modelstringCollarType'></node>
			</condition>
			<input>modelstringRSSize</input>
			<newnodename>modelstringSize</newnodename>
		</rule>
		<rule type='mathx10RS'>
			<name>multRSSize</name>
			<condition type='nodeDoesNotExist'>
				<node name='modelstringCollarType'></node>
			</condition>
			<input>modelstringRSSize</input>
			<node name='modelstringSize'></node>
		</rule>
		<rule type="matchAndTranslate">
			<name>RS-31specialcase</name>
			<input>modelstringRSSize</input>
			<input>modelstringItem</input>
			<translate>
				<match input='modelstringItem'>RS</match>
				<match input='modelstringRSSize'>31</match>
				<node name='modelstringSize'>315</node>
			</translate>
			<translate>
				<match input='modelstringItem'>RS</match>
				<match input='modelstringRSSize'>35</match>
				<node name='modelstringSize'>355</node>
			</translate>
		</rule>
	</itemrules>
	<checkrules>
		<rule type='uploadnodes'>
			<name>upload group 1</name>
			<node name='ITEM' type='string'>Item No.</node>
			<node name='Project Site'></node>
			<node name='PO Date' type='datetime'></node>
			<node name='PO Delivery Date' type='datetime'></node>
			<node name='Note Raw'></node>
			<node name='QTY' type='int'>Qty</node>
			<node name='MODEL' type='string'>Item Raw</node>
			<node name='detailSplit'>Detail Raw</node>
			<node name='modelstringItem'>Item</node>
			<node name='modelstringSize' type='string'>Size</node>
			<node name='modelstringSilencerSize'>Silencer Size</node>
			<node name='modelstringImpeller'>Impeller</node>
			<node name='modelstringOD'>O/D</node>
			<node name='modelstringPCD'>Casing PCD (Special) (mm)</node>
			<node name='modelstringCasingLength'>Casing Length (Special)</node>
			<node name='Casing Hole (Special)'></node>
			<node name='T/BOX'>T-box Position</node>
			<node name='motorSize' type='string'>Motor Size</node>
			<node name='motorClass'>Motor Class</node>
			<node name='motorBrand'>Motor Brand</node>
			<node name='motorSpeed'>Motor Speed</node>
			<node name='motorVoltage'>Motor Voltage</node>
			<node name='modelstringSpacerThickness'>Thickness (From PO)</node>
			<node name='F/B (scraped)'></node>
			<node name='greaseNippleRemark'>Grease Nipple Remark / See Sample</node>
			<node name='Reason' type='list'>Reason for Urgency</node>
			<node name='Motor Frame (Scraped)'></node>
			<node name='Price per Unit' type='float'></node>
			<node name='Take From'></node>
			<node name='PO Number' type='string'></node>
			<node name='Galvanised' type='datetime'>Galvanised/Fabrication Date (Requested)</node>
			<node name='Filename'></node>
			<node name='checkString'></node>
			<node name='Nett Amount' type='float'></node>
		</rule>
	</checkrules>
</processor-rules>
