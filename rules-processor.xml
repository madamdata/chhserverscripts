<processor-rules>
	<!--types - splitregex,  matchandtranslate-->
	<globalrules>
		<rule type="splitRegex">
			<name>detailsplit</name> <!--it is very important that each rule have a unique name-->
			<sequence>init</sequence><!--this means it doesn't have to be triggered by anything-->
			<!--<nextrule>followtest</nextrule> [>the name of the next rule to apply if this one is triggered<]-->
			<input>Detail Raw</input> <!--which node to get the data from--> 
			<multisplit> <!--multisplit dynamically creates nodes based on multiple regex matches. eg (A), (B) etc-->
				<regex>(\(([A-Z])\).+)</regex>
				<group>1</group>
				<node name="split{}"></node>
			</multisplit>
			<split><!-- split matches the FIRST instance of a regex and sends it to the specified node-->

				<regex>(Teco|Att) Motor</regex>
				<group number='1'> <!--if you need to extract only part of the match, specify the group number-->
					<node name="motorBrand"></node>
				</group>
			</split>
			<split>
				<regex>([0-9] Pole)</regex>
				<group number='1'>
					<node name="polefoo"></node>
				</group>
			</split>
		</rule>
	</globalrules>


	<itemrules>

		<rule type="alias">
			<name>renameFields</name>
			<alias name="Model / Description">MODEL</alias>
		</rule>

		<rule type="splitRegex">
			<name>modelstring</name>
			<sequence>init</sequence> <!--this means it doesn't have to be triggered by anything-->
			<nextrule>translatemodelstringItem</nextrule>
			<input>MODEL</input>
			<split>
				<regex>^(BIF|AND|RV|DQ|Matching Flanges|Mounting Feet)(-Ex|-GVD|-CR|-T)?</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringExtra"></node>
				</group>
			</split>
			<split>
				<regex>^(?i)(Ex-Proof Accessories)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
			</split>
			<split>
				<regex>^(RS|RSM)[ -]([0-9]+)(-[\d.]+[dDL])(.*)?</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringRSSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringSilencerSize"></node>
				</group>
				<group number='4'>					
					<node name="modelstringRSExtra"></node>
				</group>
			</split>
			<split>
				<regex>^(Guide Vane) (\d+).*?(\d+ Blades), ?(\d+)mmL</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringImpeller"></node>
				</group>
				<group number='4'>					
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<split>
				<regex>^(Guide Vane) (\d+) \(([0-9.])+mm.*\)</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<split>
				<regex>^(DKHRC|DKHR|EKHR) ([0-9]+)(-.+?) ?(\(LG 0\))?$</regex>
				<group number='1'>
					<node name="modelstringItem"></node>
				</group>
				<group number='2'>					
					<node name="modelstringSize"></node>
				</group>
				<group number='3'>					
					<node name="modelstringSilencerSize"></node>
				</group>
			</split>
			<split>
				<regex>([0-9]+)\/([0-9-]+\/.+)</regex> <!--xxxx/x-x/fooo format-->
				<group number='1'>
					<node name="modelstringSize"></node>
				</group>
				<group number='2'>
					<node name="modelstringImpeller"></node>
				</group>
			</split>
			<split>
				<regex>[0-9]+\/[0-9-]+\/.+\(([0-9]+)mmL\)</regex>
				<group number='1'>
					<node name="modelstringCasingLength"></node>
				</group>
			</split>
			<!--<regex input='MODEL'>^(BIF|AND|RV|DQ)(-Ex|-GVD|-CR|-T)? ? (([0-9]+)\/([^\/]+\/.+?( \((\d+)mmL\).*?)?)|(.+))$</regex>-->
		</rule>


		<rule type="matchAndTranslate">
			<name>translatemodelstringItem</name>
			<!--<nextrule>foo</nextrule>-->
			<input>modelstringItem</input>
			<input>modelstringExtra</input>
			<translate>
				<match input='modelstringItem'>AND</match>
				<node name="modelstringItem">Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Ax</match>
				<match input='modelstringExtra'>-Ex</match>
				<node name="modelstringItem">Ax-Ex</node>
			</translate>
			<translate>
				<match input='modelstringItem'>BIF</match>
				<node name="modelstringItem">Bif</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Bif</match>
				<match input='modelstringExtra'>-T</match>
				<node name="modelstringItem">Bif T/p</node>
			</translate>
			<translate>
				<match input='modelstringItem'>RV</match>
				<node name="modelstringItem">RV - Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>DQ</match>
				<node name="modelstringItem">DQ - Ax</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Matching Flanges</match>
				<node name="modelstringItem">MFlanges</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Mounting Feet</match>
				<node name="modelstringItem">MFeet</node>
			</translate>
			<translate>
				<match input='modelstringItem'>Guide Vane</match>
				<node name="modelstringItem">Guide Vane</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateSingleDetailString</name>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateSilencerSize</name>
			<input>modelstringSilencerSize</input>
			<translate>
				<match input='modelstringSilencerSize'>-4W c/w Aluminium Capacitor</match>
				<node name='modelstringSilencerSize'>-4 c/w AL</node>
			</translate>
			<translate>
				<match input='modelstringSilencerSize'>-4 EX</match>
				<node name='modelstringSilencerSize'>-4-EX</node>
			</translate>
		</rule>

		<rule type="matchAndTranslate">
			<name>translateRSSilencer</name>
			<input>modelstringRSExtra</input>
			<input>modelstringSilencerSize</input>
		</rule>
	</itemrules>
</processor-rules>
